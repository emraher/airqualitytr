% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_quality.R
\name{assess_completeness}
\alias{assess_completeness}
\title{Assess Data Completeness}
\usage{
assess_completeness(data, by_parameter = TRUE, by_station = FALSE)
}
\arguments{
\item{data}{A tibble containing air quality data with columns: time, parameter, value}

\item{by_parameter}{Logical. If TRUE, calculates metrics separately for each parameter.
Default is TRUE.}

\item{by_station}{Logical. If TRUE and station_id column exists, calculates metrics
separately for each station. Default is FALSE.}
}
\value{
A tibble containing completeness metrics:
\describe{
\item{parameter}{Parameter name (if by_parameter = TRUE)}
\item{station_id}{Station ID (if by_station = TRUE)}
\item{total_records}{Total number of records}
\item{missing_records}{Number of missing (NA) values}
\item{valid_records}{Number of valid (non-NA) values}
\item{completeness_pct}{Percentage of valid records}
\item{start_date}{First timestamp in data}
\item{end_date}{Last timestamp in data}
\item{expected_records}{Expected number of records based on frequency}
\item{coverage_pct}{Actual vs expected records percentage}
}
}
\description{
Calculates completeness metrics for air quality data, including percentage of
missing values, gap identification, and temporal coverage.
}
\examples{
\dontrun{
data <- download_air_quality_data(
  station_id = "468478b7-ace5-4bd3-b89a-a9c1c2e53080",
  parameters = c("PM10", "NO2", "O3"),
  start_datetime = "2025-03-01 00:00",
  end_datetime = "2025-03-31 23:59",
  frequency = "hourly"
)

# Get completeness summary
completeness <- assess_completeness(data)
print(completeness)

# By station (if multiple stations)
completeness_by_station <- assess_completeness(data, by_station = TRUE)
}
}
